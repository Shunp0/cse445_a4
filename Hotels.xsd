<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!-- We must create an element called Hotels. Then, Hotels consist of the hotel element.
  The hotel element is comprised of 3 different elements (Name, Phone, Address), as well as 1 attribute (Rating), which is optional)
  Then, the address element is made up of 5 different elements (Number, Street, City, State, and Zip), and 1 attribute (NearestAirport), which is REQUIRED.
  We then implement all of these in the code below.-->
  
  <xs:element name="Hotels">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Hotel" type="HotelType" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:complexType name="HotelType">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Phone" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Address" type="AddressType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="Rating" type="xs:decimal" use="optional"/>
  </xs:complexType>
  
  <xs:complexType name="AddressType">
    <xs:sequence>
      <xs:element name="Number" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Street" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="City" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="State" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Zip" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="NearstAirport" type="xs:string" use="required"/>
  </xs:complexType>
  
</xs:schema>
